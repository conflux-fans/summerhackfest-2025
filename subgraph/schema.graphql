type Person @entity {
  id: ID!
  hash: Bytes!
  versions: [PersonVersion!] @derivedFrom(field: "person")
}

type PersonVersion @entity {
  id: ID!
  person: Person!
  personHash: Bytes!
  versionIndex: BigInt!
  addedBy: Bytes!
  timestamp: BigInt!
  tag: String
  metadataCID: String

  fatherHash: Bytes
  fatherVersionIndex: BigInt
  father: PersonVersion

  motherHash: Bytes
  motherVersionIndex: BigInt
  mother: PersonVersion

  parents: [ParentChildEdge!] @derivedFrom(field: "child")
  childrenAsFather: [ParentChildEdge!] @derivedFrom(field: "fatherVersion")
  childrenAsMother: [ParentChildEdge!] @derivedFrom(field: "motherVersion")
}

type ParentChildEdge @entity {
  id: ID!
  relation: String! # "father" | "mother"
  parent: PersonVersion!
  child: PersonVersion!

  # Expose two optional parent role references separately for convenient querying
  fatherVersion: PersonVersion
  motherVersion: PersonVersion
}


